{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","id","setID","active","setActive","token","setToken","comments","setComments","handerSubmit","e","a","preventDefault","axios","get","res","data","className","type","name","value","onChange","target","onClick","result","map","phone","message","match","push","filterPhoneNumber","tableView","comment","from","href","src","picture","url","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRA0HeA,MAtHf,WAAgB,IAAD,EACOC,mBAAS,IADhB,mBACNC,EADM,KACFC,EADE,OAGeF,mBAAS,OAHxB,mBAGNG,EAHM,KAGEC,EAHF,OAKaJ,mBAAS,IALtB,mBAKNK,EALM,KAKCC,EALD,OAOmBN,mBAAS,IAP5B,mBAONO,EAPM,KAOIC,EAPJ,KASPC,EAAY,uCAAG,WAAMC,GAAN,eAAAC,EAAA,6DACnBD,EAAEE,iBAEFR,EAAU,OAHS,SAKHS,IAAMC,IAAN,qCAAwCb,EAAxC,mGAAqII,IALlI,OAKfU,EALe,OAOnBP,EAAYO,EAAIC,KAAKA,MAPF,2CAAH,sDAwClB,OACE,sBAAKC,UAAU,OAAf,UACE,2EAEA,sBAAKA,UAAU,YAAf,UACE,iCACE,sBAAKA,UAAU,aAAf,UACE,mDACA,uBAAOC,KAAK,OAAOC,KAAK,QAAQC,MAAOnB,EAAIoB,SAAU,SAACX,GAAD,OAAMR,EAAMQ,EAAEY,OAAOF,aAG5E,sBAAKH,UAAU,aAAf,UACE,iDACA,uBAAOC,KAAK,OAAOC,KAAK,WAAWC,MAAOf,EAAOgB,SAAU,SAACX,GAAD,OAAMJ,EAASI,EAAEY,OAAOF,aAGrF,wBAAQF,KAAK,SAASK,QAAS,SAACb,GAAD,OAAKD,EAAaC,IAAjD,uBAGF,sBAAKO,UAAU,mBAAf,UACE,sBAAKA,UAAU,SAAf,UACE,wBAAQA,UAAsB,QAAXd,EAAmB,SAAW,GAAIoB,QAAS,SAACb,GAAD,OAAKD,EAAaC,IAAhF,iBAEA,wBAAQO,UAAsB,UAAXd,EAAqB,SAAW,GAAIoB,QAAS,kBArDhD,WACxBnB,EAAU,SAEV,IAAIoB,EAAS,GACbjB,EAASkB,KAAI,SAACC,GACZ,OAAGA,EAAMC,QAAQC,MAAM,gCACdJ,EAAOK,KAAKH,GAEd,KAGTlB,EAAYgB,GA0CgEM,IAApE,mBAEA,wBAAQb,UAAsB,UAAXd,EAAqB,SAAW,GAAIoB,QAAS,kBAzCxD,WAChBnB,EAAU,SAEV,IAAIoB,EAAS,GAEbjB,EAASkB,KAAI,SAACC,GACZ,OAAGA,EAAMC,QAAQC,MAAM,iCACpBF,EAAMC,QAAUD,EAAMC,QAAQC,MAAM,gCAAgC,GAC7DJ,EAAOK,KAAKH,IAEf,KAGTlB,EAAYgB,GA4BgEO,IAApE,2BAGF,qBAAKd,UAAU,WAAf,SAEe,UAAXd,EACI,kCACE,gCACE,+BACE,sCACA,4CAGJ,gCAEII,EAASkB,KAAI,SAACO,GAAD,OACX,+BACE,6BAAKA,EAAQC,KAAKd,OAClB,6BAAI,mBAAGe,KAAI,cAASF,EAAQL,SAAxB,SAAoCK,EAAQL,cAFzCK,EAAQ/B,YAS3BM,EAASkB,KAAI,SAACO,GAAD,iBACX,sBAAKf,UAAU,eAAf,UACE,qBAAKkB,IAAG,OAAEH,QAAF,IAAEA,GAAF,UAAEA,EAASC,YAAX,iBAAE,EAAeG,eAAjB,iBAAE,EAAwBpB,YAA1B,aAAE,EAA8BqB,IAAKC,IAAI,KAEjD,sBAAKrB,UAAU,OAAf,UACE,gCAAQe,EAAQC,KAAKd,OACrB,4BAAIa,EAAQL,eALmBK,EAAQ/B,mBC5F9CsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b5b8cb2e.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport './App.scss';\n\nfunction App() {\n  const [id, setID] = useState(\"\");\n\n  const [active, setActive] = useState(\"all\");\n\n  const [token, setToken] = useState(\"\");\n\n  const [comments, setComments] = useState([]);\n\n  const handerSubmit = async(e) =>{\n    e.preventDefault();\n\n    setActive(\"all\");\n\n    let res = await axios.get(`https://graph.facebook.com/${id}/comments?fields=from{name,id,username,link, picture},created_time,message&access_token=${token}`);\n\n    setComments(res.data.data);\n  }\n\n  const filterPhoneNumber = () =>{\n    setActive(\"phone\");\n\n    let result = [];\n    comments.map((phone)=>{\n      if(phone.message.match(/(09|03|07|08|05)+([0-9]{8})/g)){\n        return result.push(phone);\n      }\n      return 0;\n    });\n\n    setComments(result);\n  }\n\n  const tableView = () =>{\n    setActive(\"table\");\n\n    let result = [];\n\n    comments.map((phone)=>{\n      if(phone.message.match(/(09|03|07|08|05)+([0-9]{8})/g)){\n         phone.message = phone.message.match(/(09|03|07|08|05)+([0-9]{8})/g)[0];\n         return result.push(phone);\n      }\n      return 0;\n    });\n\n    setComments(result);\n  }\n\n  return(\n    <div className=\"home\">\n      <h2>Filter Phone Number Of A Post In Facebook</h2>\n\n      <div className=\"container\">\n        <form>\n          <div className=\"form-group\">\n            <label>ID(user, page)</label>\n            <input type=\"text\" name=\"setID\" value={id} onChange={(e)=> setID(e.target.value)} />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Access Token</label>\n            <input type=\"text\" name=\"setToken\" value={token} onChange={(e)=> setToken(e.target.value)} />\n          </div>\n\n          <button type=\"submit\" onClick={(e)=>handerSubmit(e)}>Filter</button>\n        </form>\n\n        <div className=\"wrapper-comments\">\n          <div className=\"header\">\n            <button className={active === \"all\" ? \"active\" : \"\"} onClick={(e)=>handerSubmit(e)}>All</button>\n\n            <button className={active === \"phone\" ? \"active\" : \"\"} onClick={()=>filterPhoneNumber()}>Phone</button>\n\n            <button className={active === \"table\" ? \"active\" : \"\"} onClick={()=>tableView()}>Table View</button>\n          </div>\n\n          <div className=\"comments\">\n            {\n              active === \"table\" ? (\n                  <table>\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Phone</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {\n                        comments.map((comment)=>(\n                          <tr key={comment.id}>\n                            <td>{comment.from.name}</td>\n                            <td><a href={`tel:${comment.message}`}>{comment.message}</a></td>\n                          </tr>\n                        ))\n                      }\n                    </tbody>\n                  </table>\n              ): (\n                comments.map((comment)=>(\n                  <div className=\"comment-item\" key={comment.id}>\n                    <img src={comment?.from?.picture?.data?.url} alt=\"\"/>\n        \n                    <div className=\"user\">\n                      <label>{comment.from.name}</label>\n                      <p>{comment.message}</p>\n                    </div>\n                  </div>\n                ))\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}